<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bbyiya.dao.OBranchordersMapper" >
  <resultMap id="BaseResultMap" type="com.bbyiya.model.OBranchorders" >
    <id column="UserOrderId" property="userorderid" jdbcType="VARCHAR" />
    <result column="UserId" property="userid" jdbcType="BIGINT" />
    <result column="CustomerName" property="customername" jdbcType="VARCHAR" />
    <result column="CartId" property="cartid" jdbcType="BIGINT" />
    <result column="BranchUserId" property="branchuserid" jdbcType="BIGINT" />
    <result column="AgentUserId" property="agentuserid" jdbcType="BIGINT" />
    <result column="ProductId" property="productid" jdbcType="BIGINT" />
    <result column="StyleId" property="styleid" jdbcType="BIGINT" />
    <result column="FromBranchUserId" property="frombranchuserid" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    UserOrderId, UserId, CustomerName, CartId, BranchUserId, AgentUserId, ProductId, 
    StyleId, FromBranchUserId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from o_branchorders
    where UserOrderId = #{userorderid,jdbcType=VARCHAR}
  </select>
    <!-- 分店用订单结果类Result -->
  <resultMap id="BranchOrderVoResult" type="com.bbyiya.vo.order.BranchOrderVo" extends="BaseResultMap">  
  </resultMap>  
  
  <!-- 01 获取来自分店的的订单-->
  <select id="findBranchOrdersByBranchUserId" resultMap="BranchOrderVoResult"  >
    select a.UserOrderId as userorderid, a.UserId as userid, a.CustomerName as customername, a.CartId as cartid, a.BranchUserId as branchuserid, a.AgentUserId as agentuserid, a.ProductId as productid, a.StyleId as styleid,a.FromBranchUserId as frombranchuserid,b.Mobilephone as phone,b.Adress as address,b.Birthday as babybirthday,b.TempId as tempid
    from o_branchorders a inner join p_myproducttempapply b on a.CartId=b.CartId
    where a.BranchUserId = #{branchUserId,jdbcType=BIGINT} 
    <if test="keywords != null and keywords!=''" >
        and  (a.UserOrderId  LIKE  CONCAT('%', #{keywords,jdbcType=VARCHAR},'%' ) or a.CustomerName  LIKE  CONCAT('%', #{keywords,jdbcType=VARCHAR},'%' ) or b.Mobilephone LIKE  CONCAT('%', #{keywords,jdbcType=VARCHAR},'%' ) )
    </if>
    order by a.UserOrderId desc
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from o_branchorders
    where UserOrderId = #{userorderid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.bbyiya.model.OBranchorders" >
    insert into o_branchorders (UserOrderId, UserId, CustomerName, 
      CartId, BranchUserId, AgentUserId, 
      ProductId, StyleId, FromBranchUserId
      )
    values (#{userorderid,jdbcType=VARCHAR}, #{userid,jdbcType=BIGINT}, #{customername,jdbcType=VARCHAR}, 
      #{cartid,jdbcType=BIGINT}, #{branchuserid,jdbcType=BIGINT}, #{agentuserid,jdbcType=BIGINT}, 
      #{productid,jdbcType=BIGINT}, #{styleid,jdbcType=BIGINT}, #{frombranchuserid,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bbyiya.model.OBranchorders" >
    insert into o_branchorders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userorderid != null" >
        UserOrderId,
      </if>
      <if test="userid != null" >
        UserId,
      </if>
      <if test="customername != null" >
        CustomerName,
      </if>
      <if test="cartid != null" >
        CartId,
      </if>
      <if test="branchuserid != null" >
        BranchUserId,
      </if>
      <if test="agentuserid != null" >
        AgentUserId,
      </if>
      <if test="productid != null" >
        ProductId,
      </if>
      <if test="styleid != null" >
        StyleId,
      </if>
      <if test="frombranchuserid != null" >
        FromBranchUserId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userorderid != null" >
        #{userorderid,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="customername != null" >
        #{customername,jdbcType=VARCHAR},
      </if>
      <if test="cartid != null" >
        #{cartid,jdbcType=BIGINT},
      </if>
      <if test="branchuserid != null" >
        #{branchuserid,jdbcType=BIGINT},
      </if>
      <if test="agentuserid != null" >
        #{agentuserid,jdbcType=BIGINT},
      </if>
      <if test="productid != null" >
        #{productid,jdbcType=BIGINT},
      </if>
      <if test="styleid != null" >
        #{styleid,jdbcType=BIGINT},
      </if>
      <if test="frombranchuserid != null" >
        #{frombranchuserid,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bbyiya.model.OBranchorders" >
    update o_branchorders
    <set >
      <if test="userid != null" >
        UserId = #{userid,jdbcType=BIGINT},
      </if>
      <if test="customername != null" >
        CustomerName = #{customername,jdbcType=VARCHAR},
      </if>
      <if test="cartid != null" >
        CartId = #{cartid,jdbcType=BIGINT},
      </if>
      <if test="branchuserid != null" >
        BranchUserId = #{branchuserid,jdbcType=BIGINT},
      </if>
      <if test="agentuserid != null" >
        AgentUserId = #{agentuserid,jdbcType=BIGINT},
      </if>
      <if test="productid != null" >
        ProductId = #{productid,jdbcType=BIGINT},
      </if>
      <if test="styleid != null" >
        StyleId = #{styleid,jdbcType=BIGINT},
      </if>
      <if test="frombranchuserid != null" >
        FromBranchUserId = #{frombranchuserid,jdbcType=BIGINT},
      </if>
    </set>
    where UserOrderId = #{userorderid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bbyiya.model.OBranchorders" >
    update o_branchorders
    set UserId = #{userid,jdbcType=BIGINT},
      CustomerName = #{customername,jdbcType=VARCHAR},
      CartId = #{cartid,jdbcType=BIGINT},
      BranchUserId = #{branchuserid,jdbcType=BIGINT},
      AgentUserId = #{agentuserid,jdbcType=BIGINT},
      ProductId = #{productid,jdbcType=BIGINT},
      StyleId = #{styleid,jdbcType=BIGINT},
      FromBranchUserId = #{frombranchuserid,jdbcType=BIGINT}
    where UserOrderId = #{userorderid,jdbcType=VARCHAR}
  </update>
</mapper>