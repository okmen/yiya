<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bbyiya.dao.OOrderproductsMapper" >
  <resultMap id="BaseResultMap" type="com.bbyiya.model.OOrderproducts" >
    <id column="OrderProductId" property="orderproductid" jdbcType="VARCHAR" />
    <result column="UserOrderId" property="userorderid" jdbcType="VARCHAR" />
    <result column="ProductId" property="productid" jdbcType="BIGINT" />
    <result column="StyleId" property="styleid" jdbcType="BIGINT" />
    <result column="BuyerUserId" property="buyeruserid" jdbcType="BIGINT" />
    <result column="ProductTitle" property="producttitle" jdbcType="VARCHAR" />
    <result column="Price" property="price" jdbcType="DECIMAL" />
    <result column="BranchUserId" property="branchuserid" jdbcType="BIGINT" />
    <result column="SalesUserId" property="salesuserid" jdbcType="BIGINT" />
    <result column="PropertyStr" property="propertystr" jdbcType="VARCHAR" />
    <result column="Count" property="count" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    OrderProductId, UserOrderId, ProductId, StyleId, BuyerUserId, ProductTitle, Price, 
    BranchUserId, SalesUserId, PropertyStr, Count
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from O_OrderProducts
    where OrderProductId = #{orderproductid,jdbcType=VARCHAR}
  </select>
  <select id="findOProductsByOrderId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from O_OrderProducts
    where UserOrderId = #{userOrderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from O_OrderProducts
    where OrderProductId = #{orderproductid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.bbyiya.model.OOrderproducts" >
    insert into O_OrderProducts (OrderProductId, UserOrderId, ProductId, 
      StyleId, BuyerUserId, ProductTitle, 
      Price, BranchUserId, SalesUserId, 
      PropertyStr, Count)
    values (#{orderproductid,jdbcType=VARCHAR}, #{userorderid,jdbcType=VARCHAR}, #{productid,jdbcType=BIGINT}, 
      #{styleid,jdbcType=BIGINT}, #{buyeruserid,jdbcType=BIGINT}, #{producttitle,jdbcType=VARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{branchuserid,jdbcType=BIGINT}, #{salesuserid,jdbcType=BIGINT}, 
      #{propertystr,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bbyiya.model.OOrderproducts" >
    insert into O_OrderProducts
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderproductid != null" >
        OrderProductId,
      </if>
      <if test="userorderid != null" >
        UserOrderId,
      </if>
      <if test="productid != null" >
        ProductId,
      </if>
      <if test="styleid != null" >
        StyleId,
      </if>
      <if test="buyeruserid != null" >
        BuyerUserId,
      </if>
      <if test="producttitle != null" >
        ProductTitle,
      </if>
      <if test="price != null" >
        Price,
      </if>
      <if test="branchuserid != null" >
        BranchUserId,
      </if>
      <if test="salesuserid != null" >
        SalesUserId,
      </if>
      <if test="propertystr != null" >
        PropertyStr,
      </if>
      <if test="count != null" >
        Count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderproductid != null" >
        #{orderproductid,jdbcType=VARCHAR},
      </if>
      <if test="userorderid != null" >
        #{userorderid,jdbcType=VARCHAR},
      </if>
      <if test="productid != null" >
        #{productid,jdbcType=BIGINT},
      </if>
      <if test="styleid != null" >
        #{styleid,jdbcType=BIGINT},
      </if>
      <if test="buyeruserid != null" >
        #{buyeruserid,jdbcType=BIGINT},
      </if>
      <if test="producttitle != null" >
        #{producttitle,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="branchuserid != null" >
        #{branchuserid,jdbcType=BIGINT},
      </if>
      <if test="salesuserid != null" >
        #{salesuserid,jdbcType=BIGINT},
      </if>
      <if test="propertystr != null" >
        #{propertystr,jdbcType=VARCHAR},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bbyiya.model.OOrderproducts" >
    update O_OrderProducts
    <set >
      <if test="userorderid != null" >
        UserOrderId = #{userorderid,jdbcType=VARCHAR},
      </if>
      <if test="productid != null" >
        ProductId = #{productid,jdbcType=BIGINT},
      </if>
      <if test="styleid != null" >
        StyleId = #{styleid,jdbcType=BIGINT},
      </if>
      <if test="buyeruserid != null" >
        BuyerUserId = #{buyeruserid,jdbcType=BIGINT},
      </if>
      <if test="producttitle != null" >
        ProductTitle = #{producttitle,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        Price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="branchuserid != null" >
        BranchUserId = #{branchuserid,jdbcType=BIGINT},
      </if>
      <if test="salesuserid != null" >
        SalesUserId = #{salesuserid,jdbcType=BIGINT},
      </if>
      <if test="propertystr != null" >
        PropertyStr = #{propertystr,jdbcType=VARCHAR},
      </if>
      <if test="count != null" >
        Count = #{count,jdbcType=INTEGER},
      </if>
    </set>
    where OrderProductId = #{orderproductid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bbyiya.model.OOrderproducts" >
    update O_OrderProducts
    set UserOrderId = #{userorderid,jdbcType=VARCHAR},
      ProductId = #{productid,jdbcType=BIGINT},
      StyleId = #{styleid,jdbcType=BIGINT},
      BuyerUserId = #{buyeruserid,jdbcType=BIGINT},
      ProductTitle = #{producttitle,jdbcType=VARCHAR},
      Price = #{price,jdbcType=DECIMAL},
      BranchUserId = #{branchuserid,jdbcType=BIGINT},
      SalesUserId = #{salesuserid,jdbcType=BIGINT},
      PropertyStr = #{propertystr,jdbcType=VARCHAR},
      Count = #{count,jdbcType=INTEGER}
    where OrderProductId = #{orderproductid,jdbcType=VARCHAR}
  </update>
</mapper>