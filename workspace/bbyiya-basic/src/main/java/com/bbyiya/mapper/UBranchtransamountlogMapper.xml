<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bbyiya.dao.UBranchtransamountlogMapper" >
  <resultMap id="BaseResultMap" type="com.bbyiya.model.UBranchtransamountlog" >
    <id column="LogId" property="logid" jdbcType="BIGINT" />
    <result column="BranchUserId" property="branchuserid" jdbcType="BIGINT" />
    <result column="Amount" property="amount" jdbcType="DECIMAL" />
    <result column="PayId" property="payid" jdbcType="VARCHAR" />
    <result column="Type" property="type" jdbcType="INTEGER" />
    <result column="CreateTime" property="createtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    LogId, BranchUserId, Amount, PayId, Type, CreateTime
  </sql>
   <!--运费交易记录result -->
  <resultMap id="UBranchTansAmountlogResultMap" type="com.bbyiya.vo.user.UBranchTansAmountlogResult" extends="BaseResultMap">  
  </resultMap>  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from u_branchtransamountlog
    where LogId = #{logid,jdbcType=BIGINT}
  </select>
  
   <select id="findUBranchTansAmountlogResultByBranchUserId" resultMap="UBranchTansAmountlogResultMap" >
   <!-- 03  获取代理商运费的交易流水 result -->
    select <include refid="Base_Column_List" />
    from u_branchtransamountlog where BranchUserId = #{branchUserId,jdbcType=BIGINT}
    <if test="type != null" >
       and Type= #{type,jdbcType=INTEGER}
    </if>
    order by LogId desc
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from u_branchtransamountlog
    where LogId = #{logid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bbyiya.model.UBranchtransamountlog" >
    insert into u_branchtransamountlog (LogId, BranchUserId, Amount, 
      PayId, Type, CreateTime
      )
    values (#{logid,jdbcType=BIGINT}, #{branchuserid,jdbcType=BIGINT}, #{amount,jdbcType=DECIMAL}, 
      #{payid,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bbyiya.model.UBranchtransamountlog" >
    insert into u_branchtransamountlog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logid != null" >
        LogId,
      </if>
      <if test="branchuserid != null" >
        BranchUserId,
      </if>
      <if test="amount != null" >
        Amount,
      </if>
      <if test="payid != null" >
        PayId,
      </if>
      <if test="type != null" >
        Type,
      </if>
      <if test="createtime != null" >
        CreateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logid != null" >
        #{logid,jdbcType=BIGINT},
      </if>
      <if test="branchuserid != null" >
        #{branchuserid,jdbcType=BIGINT},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="payid != null" >
        #{payid,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bbyiya.model.UBranchtransamountlog" >
    update u_branchtransamountlog
    <set >
      <if test="branchuserid != null" >
        BranchUserId = #{branchuserid,jdbcType=BIGINT},
      </if>
      <if test="amount != null" >
        Amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="payid != null" >
        PayId = #{payid,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        Type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        CreateTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where LogId = #{logid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bbyiya.model.UBranchtransamountlog" >
    update u_branchtransamountlog
    set BranchUserId = #{branchuserid,jdbcType=BIGINT},
      Amount = #{amount,jdbcType=DECIMAL},
      PayId = #{payid,jdbcType=VARCHAR},
      Type = #{type,jdbcType=INTEGER},
      CreateTime = #{createtime,jdbcType=TIMESTAMP}
    where LogId = #{logid,jdbcType=BIGINT}
  </update>
</mapper>