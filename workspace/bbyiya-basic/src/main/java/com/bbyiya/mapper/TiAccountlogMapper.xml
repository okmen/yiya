<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bbyiya.dao.TiAccountlogMapper" >
  <resultMap id="BaseResultMap" type="com.bbyiya.model.TiAccountlog" >
    <id column="LogId" property="logid" jdbcType="BIGINT" />
    <result column="UserId" property="userid" jdbcType="BIGINT" />
    <result column="Amount" property="amount" jdbcType="DOUBLE" />
    <result column="Type" property="type" jdbcType="INTEGER" />
    <result column="CreateTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="TotalAmount" property="totalamount" jdbcType="DOUBLE" />
    <result column="AvailableAmount" property="availableamount" jdbcType="DOUBLE" />
    <result column="PayId" property="payid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    LogId, UserId, Amount, Type, CreateTime, TotalAmount, AvailableAmount, PayId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ti_accountLog
    where LogId = #{logid,jdbcType=BIGINT}
  </select>
  <select id="getLastResult" resultMap="BaseResultMap"  ><!-- 01 获取最新一条记录 -->
    select 
    <include refid="Base_Column_List" />
    from ti_accountLog order by LogId desc limit 1
  </select>
  <select id="findList" resultMap="BaseResultMap"  ><!-- 02 查询交易流水记录 -->
    select 
    <include refid="Base_Column_List" />
    from ti_accountLog order by LogId desc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ti_accountLog
    where LogId = #{logid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bbyiya.model.TiAccountlog" >
    insert into ti_accountLog (LogId, UserId, Amount, 
      Type, CreateTime, TotalAmount, 
      AvailableAmount, PayId)
    values (#{logid,jdbcType=BIGINT}, #{userid,jdbcType=BIGINT}, #{amount,jdbcType=DOUBLE}, 
      #{type,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{totalamount,jdbcType=DOUBLE}, 
      #{availableamount,jdbcType=DOUBLE}, #{payid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bbyiya.model.TiAccountlog" >
    insert into ti_accountLog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logid != null" >
        LogId,
      </if>
      <if test="userid != null" >
        UserId,
      </if>
      <if test="amount != null" >
        Amount,
      </if>
      <if test="type != null" >
        Type,
      </if>
      <if test="createtime != null" >
        CreateTime,
      </if>
      <if test="totalamount != null" >
        TotalAmount,
      </if>
      <if test="availableamount != null" >
        AvailableAmount,
      </if>
      <if test="payid != null" >
        PayId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logid != null" >
        #{logid,jdbcType=BIGINT},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalamount != null" >
        #{totalamount,jdbcType=DOUBLE},
      </if>
      <if test="availableamount != null" >
        #{availableamount,jdbcType=DOUBLE},
      </if>
      <if test="payid != null" >
        #{payid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bbyiya.model.TiAccountlog" >
    update ti_accountLog
    <set >
      <if test="userid != null" >
        UserId = #{userid,jdbcType=BIGINT},
      </if>
      <if test="amount != null" >
        Amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="type != null" >
        Type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        CreateTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalamount != null" >
        TotalAmount = #{totalamount,jdbcType=DOUBLE},
      </if>
      <if test="availableamount != null" >
        AvailableAmount = #{availableamount,jdbcType=DOUBLE},
      </if>
      <if test="payid != null" >
        PayId = #{payid,jdbcType=VARCHAR},
      </if>
    </set>
    where LogId = #{logid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bbyiya.model.TiAccountlog" >
    update ti_accountLog
    set UserId = #{userid,jdbcType=BIGINT},
      Amount = #{amount,jdbcType=DOUBLE},
      Type = #{type,jdbcType=INTEGER},
      CreateTime = #{createtime,jdbcType=TIMESTAMP},
      TotalAmount = #{totalamount,jdbcType=DOUBLE},
      AvailableAmount = #{availableamount,jdbcType=DOUBLE},
      PayId = #{payid,jdbcType=VARCHAR}
    where LogId = #{logid,jdbcType=BIGINT}
  </update>
</mapper>